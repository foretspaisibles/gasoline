Gasoline is an application framework for OCaml, it implements components
and services which can be used to develop OCaml applications. It
offers:

- Processing of command line arguments
- A simple and powerful internationalisation-friendly diagnostic facility
- Analyse of configuration files
- A cascading system for configuration values, usable to implement
  site policies Unicode support
- Stock application patterns, like a Unix filter or a compiler

We call a program using the Gasoline framework a Gasoline guest.

{2:application The [application] library}

{!modules:
Gasoline_SysExits
Gasoline_Unicode
Gasoline_Generic_Definition
Gasoline_Generic_Asset
Gasoline_Generic_Component
Gasoline_Generic_Application
Gasoline_Plain_Definition
Gasoline_Plain_Application
Gasoline_Plain_Filter
Gasoline_Plain_SecureTool
Gasoline_Plain_UserTool
}

{2:author The [author] library}

This small library provides services for authoring, like production of
simple HTML or SGML files.  It is a very primitive facility, and does
not use the type system to enfore correction of generated documents,
as more advanced frameworks can do.

{!modules:
Gasoline_Author_HTML
Gasoline_Author_SGML
Gasoline_LoremIpsum
}

{2:message The [message] library}

This small experimental library provides services

{!modules:
Gasoline_Generic_Diagnostic
Gasoline_Generic_Message
Gasoline_Plain_Message
}

{1 Trailer}

{2 Index}

{!indexlist}

{2 Authors}

The Gasoline software has been initially written by Michael Gr√ºnewald.

{2 Remarks}

- See {{:https://godirepo.camlcity.org/wwwsvn/trunk/code/doc/intro.txt?rev=1852&root=lib-ocamlnet2&view=auto} intro} for an example of an intro file.
