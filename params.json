{"name":"Gasoline","tagline":"Gasoline is an OCaml library providing application templates. Application written with Gasoline are parametrised by the command line, environment or configuration files, they support fine-grained lightweight internationalised diagnostics and handle software component dependencies.","body":"# Gasoline\r\n\r\nThe Gasoline project aims at implementing a Unix-ish application\r\ndevelopment framework for OCaml.  The framework will provide\r\napplication templates factoring application components bootstrapping,\r\nconfiguration analyse and offering homogeneous diagnostic facilities.\r\n\r\nIt is written by Michael Grünewald and is distributed under the\r\n[CeCILL-B][1] license agreement.\r\n\r\nUsers of Gasoline should be enabled to:\r\n\r\n- Rapidly develop applications by using *application patterns* such as\r\n  “Unix filter”, “tabular data processor” or “compiler”.\r\n- Write large software suites whose elements offer homogeneous\r\n  interfaces.\r\n- Use standardised diagnostic facilities supporting\r\n  internationalisation.\r\n- Cleanly distinguish between application components and lower-level\r\n  software engineering artifacts.\r\n- Easily bootstrap and shutdown applications consisting of many\r\n  modules.\r\n- Use common file formats such as CSV or JSON in their applications.\r\n\r\n\r\n## Current state\r\n\r\nGasoline is still beta-software, and many features or design elements\r\nare susceptible to change before we reach version 1.0. Current\r\nfeatures are:\r\n\r\n- A [diagnostic facility][2] similar to `printf` but better suited to\r\n  internationalisation and having routing rules.\r\n- [Configuration][3] based on files, environment variables and command\r\n  line arguments.\r\n- Configuration [cascading rules][4] which can be used to let system\r\n  administrators enforce some settings of installed applications.\r\n- Software [component management][5] which correctly bootstrap and\r\n  shutdown the application, exception sent by the guest are caught and\r\n  an emergency shutdown procedure is triggered.\r\n- A [unit test][9] suite.\r\n\r\nApplications can take advantage of a [simplified interface][6] to the\r\n[Camomile library][7] and of writer functions, allowing to\r\nproduce simple SGML or HTML reports.\r\n\r\nSee the [ocamldoc generated documentation][8] of the `master` branch\r\nfor more details.\r\n\r\n\r\n## Setup guide\r\n\r\nThe installation procedure is based on the portable build system\r\n[bsdowl][10] based on BSD Make.\r\n\r\n1. Verify that prerequisites are installed:\r\n   - BSD Make\r\n   - [BSD OWl][11]\r\n   - OCaml\r\n   - GNU Autoconf\r\n\r\n2. Get the source, either by cloning the repository or by exploding a\r\n   [distribution tarball](releases).\r\n\r\n3. Optionally run `autoconf` to produce a configuration script. This\r\n   is only required if the script is not already present.\r\n\r\n4. Run `./configure`, you can choose the installation prefix with\r\n   `--prefix`.\r\n\r\n5. Run `make build`.\r\n\r\n6. Optionally run `make test` to test your build.\r\n\r\n7. Finally run `make install`.\r\n\r\nDepending on how BSD Make is called on your system, you may need to\r\nreplace `make` by `bsdmake` or `bmake` in steps 5, 6, and 7.  The GNU\r\nMake program usually give up the ghost, croaking `*** missing\r\nseparator. Stop.`\r\n\r\nStep 7 requires that you can `su -` if you are not already `root`.\r\n\r\n\r\nMichael Grünewald in Bonn, on October 21, 2014\r\n\r\n   [1]: http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.html\r\n   [2]: wiki/DiagnosticFacility\r\n   [3]: wiki/Configuration\r\n   [4]: wiki/CascadingRules\r\n   [5]: wiki/Component\r\n   [6]: http://michipili.github.io/gasoline/reference/Unicode.html\r\n   [8]: http://michipili.github.io/gasoline/reference/index.html\r\n   [9]: wiki/UnitTesting\r\n   [10]: https://github.com/michipili/bsdowl\r\n   [11]: https://github.com/michipili/bsdowl/wiki/Install\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}